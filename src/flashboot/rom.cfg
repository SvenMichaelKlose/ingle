SYMBOLS {
    #__LOADADDR__:  type = import;
    #__EXEHDR__:    type = import;
    __STACKSIZE__: type = weak, value = $0800; # 2k stack
}

MEMORY {
    ZP:       file = "", define = yes, start = $000C, size = $0084;
    ROMINFO:  file = %O,               start = $a000, size = $0009;
    MAIN:     file = %O, define = yes, start = $a009, size = $1ff7 - __STACKSIZE__;
    RAM123:   file = "", define = yes, start = $0400, size = $0c00;
    IO23:     file = "", define = yes, start = $9800, size = $07f0;
}

SEGMENTS {
    ZEROPAGE:   load = ZP,      type = zp;
    ROMINFO:    load = ROMINFO, type = ro;
    RAMIFY:     load = MAIN,    type = ro, define = yes;
    STARTUP:    load = MAIN,    type = ro, define = yes;
    LOWCODE:    load = MAIN,    type = ro, optional = yes;
    ONCE:       load = MAIN,    type = ro, optional = yes;
    CODE:       load = MAIN,    type = ro;
    RODATA:     load = MAIN,    type = ro;
    DATA:       load = MAIN,    type = ro;
    INIT:       load = MAIN,    type = bss;
    BSS:        load = RAM123,  type = bss, define = yes;
    TRAMPOLINE: load = IO23,    type = rw, define = yes;
}

FEATURES {
    CONDES: type    = constructor,
            label   = __CONSTRUCTOR_TABLE__,
            count   = __CONSTRUCTOR_COUNT__,
            segment = ONCE;
    CONDES: type    = destructor,
            label   = __DESTRUCTOR_TABLE__,
            count   = __DESTRUCTOR_COUNT__,
            segment = RODATA;
    CONDES: type    = interruptor,
            label   = __INTERRUPTOR_TABLE__,
            count   = __INTERRUPTOR_COUNT__,
            segment = RODATA,
            import  = __CALLIRQ__;
}
